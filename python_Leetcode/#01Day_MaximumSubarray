#1
class Solution:
    def maxSubArray(self, nums: List[int]) -> int:
        for i in range(1, len(nums)):
            nums[i] = max(nums[i-1]+nums[i], nums[i])
        return max(nums)
        
        
        
""" #2
      Kadane's Algorithm: Kadane's Algorithm is among the popular approaches used to solve the problem with the help of dynamic programming. 
the maximum subarray problem is considered among the popular problems in the field of dynamic programming. Step 1 and 2 is important in this algorithum

Step 1: We have to initialize count = 0
Step 2: We have to initialize maxi = 0
"""


def maxSubArray(self, nums: List[int]) -> int:
    count=0
    maxi=nums[0] 
    for i in range(0, len(nums)):
        count+=nums[i]
        if count>maxi:
            maxi=count
        if(count<0):
            count=0
    return maxi
