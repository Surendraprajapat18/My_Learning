from requests import head


class _Node:
    __slots__ = '_element', '_next'

    def __init__(self, element, next):
        self._element = element
        self._next = next

class LinkedList:
    def __init__(self):
        self._head = None
        self._tail = None
        self._size = 0

    def __len__(self):
        return self._size

    def isempty(self):
        return self._size == 0

    def addlast(self, e):
        newest = _Node(e, None)
        if self.isempty():
            self._head = newest
        else:
            self._tail._next = newest
        self._tail = newest
        self._size += 1
    
    #function for insert new elemnt according to user postion
    def addany(self, e, position):
        newest = _Node(e, None)
        p = self._head
        i = 1
        while i<(position -1):
            p = p._next
            i +=1
        newest._next = p._next
        p._next = newest
        self._size += 1
    
    #function for insert new element at first position in linkedlist
    def addfirst(self, e):
        newest = _Node(e, None)
        if self.isempty():
            self._head = newest
            self._tail = newest
        else:
            newest._next = self._head
            self._head = newest
        self._size += 1

    #function for searching element
    def search(self, key):
        p = self._head
        index = 0
        while p:
            if p._element == key:
                return index
            p = p._next
            index += 1
        return -1

    #function for display linkedlist element
    def display(self):
        p = self._head
        while p:
            print(p._element,end=' ')
            p = p._next
        print()

    #function for delete first element from linkedlist 
    def removefirst(self):
        if self.isempty():
            print("List is empty")
            return
        e = self._head._element
        self._head = self._head._next
        self._size -= 1
        if self.isempty():
            self.tail = None
        return e
        
    #function for delete last element from linkedlist
    def removelast(self):
        if self.isempty():
            print("List is empty")
            return
        p = self._head
        i = 1
        while i<len(self)-1:
            p = p._next
            i += 1
        self._tail = p
        p = p._next
        e = p._element
        self._tail._next = None
        self._size -= 1
        return e
    #function for delete element from any position in linkedlist
    def removeany(self, position):
        p = self._head
        i = 1
        while i<position-1:
            p = p._next
            i = i+1
        e = p._next._element
        p._next = p._next._next
        self._size -= 1
        return e


L = LinkedList()
L.addlast(7)
L.addlast(4)
L.addlast(12)
L.addlast(8)
L.addlast(3)
#L.display()
a = 17
L.addfirst(a)
L.addany(15, 3)
L.display()
#print('Size:',len(L))
i = L.search(a)
#print(f"index of {a}:", i)
#print('Size:', len(L))
#ele = L.removelast()
#L.display()
print('Size:',len(L))
#print("Element Rmoved:", ele)
ele = L.removeany(3)
L.display()
print('Size:',len(L))
print("Element Rmoved:", ele)
